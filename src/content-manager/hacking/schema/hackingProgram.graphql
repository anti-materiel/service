enum HackingProgramTarget {
  REM
  TAG
  HI
  HACKER
}

enum HackingProgramSkillType {
  ENTIRE_ORDER
  SHORT_SKILL
  ARO
}

type HackingProgram {
  id: ID!
  name: String!
  link: String
  attackMod: String
  opponentMod: String
  damage: String
  burst: String
  target: [HackingProgramTarget!]!
  skillType: [HackingProgramSkillType!]!
  special: String
}

input HackingProgramRequest {
  name: String!
  link: String
  attackMod: String
  opponentMod: String
  damage: String
  burst: String
  target: [HackingProgramTarget!]!
  skillType: [HackingProgramSkillType!]!
  special: String
}

type PagedHackingPrograms {
  content: [HackingProgram!]!
  limit: Int
  count: Int!
  page: Int!
  last: Boolean!
}

extend type Query {
  hackingProgramById(hackingProgramId: ID!): HackingProgram!
  hackingProgramsList(
    search: Search
    page: Int
    limit: Int
  ): PagedHackingPrograms!
}

extend type Mutation {
  createHackingProgram(request: HackingProgramRequest!): HackingProgram!
  updateHackingProgram(
    hackingProgramId: ID!
    request: HackingProgramRequest!
  ): HackingProgram!
}
