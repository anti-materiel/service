type Weapon {
  id: ID!
  name: String!
  link: String
  modes: [WeaponMode!]!
}

input WeaponRequest {
  name: String!
  link: String
}

type PagedWeapons {
  content: [Weapon!]!
  limit: Int
  count: Int!
  page: Int!
  last: Boolean!
}

extend type Query {
  weaponById(id: ID!): Weapon
  searchWeapons(name: String!, page: Int, limit: Int): PagedWeapons!
  allWeapons(page: Int, limit: Int): PagedWeapons!
}

extend type Mutation {
  createWeapon(request: WeaponRequest!): Weapon!
  updateWeapon(weaponId: ID!, request: WeaponRequest!): Weapon!
}
